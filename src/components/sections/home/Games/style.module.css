@import '@styles/globals';
@import '@styles/mixins';

:root {
  --tile-border-radius: 1.25rem;
}

.lc-link {
  @mixin link;

  display: grid;
  grid-auto-flow: column;
  grid-auto-columns: max-content;
  align-items: center;
  justify-items: start;
  gap: var(--space-2xs);
  color: var(--color-black);
  text-transform: uppercase;
  text-decoration: underline;
  text-decoration-thickness: 3px;
  text-underline-offset: 8px;
  padding-bottom: 0.5rem;

  & svg {
    width: 1rem;
    height: auto;
  }
}

.gs-main {
  & > * {
    border-width: 0.375rem;
    border-style: solid;
  }

  & > :nth-child(5n + 1) {
    border-color: var(--color-game-tile-red);
    background-color: color-mod(var(--color-game-tile-red) a(50%));

    & > :first-child {
      background-color: var(--color-game-tile-red);
    }
  }

  & > :nth-child(5n + 2) {
    border-color: var(--color-game-tile-teal);
    background-color: color-mod(var(--color-game-tile-teal) a(50%));

    & > :first-child {
      background-color: var(--color-game-tile-teal);
    }
  }

  & > :nth-child(5n + 3) {
    border-color: var(--color-game-tile-green);
    background-color: color-mod(var(--color-game-tile-green) a(50%));

    & > :first-child {
      background-color: var(--color-game-tile-green);
    }
  }

  & > :nth-child(5n + 4) {
    border-color: var(--color-game-tile-blue);
    background-color: color-mod(var(--color-game-tile-blue) a(50%));

    & > :first-child {
      background-color: var(--color-game-tile-blue);
    }
  }

  & > :nth-child(5n + 5) {
    border-color: var(--color-game-tile-pink);
    background-color: color-mod(var(--color-game-tile-pink) a(50%));

    & > :first-child {
      background-color: var(--color-game-tile-pink);
    }
  }
}

.gs-tile-content-wrapper {
  padding: 1rem;
  background-color: color-mod(var(--color-game-tile-red) a(30%));
  border-bottom-left-radius: var(--tile-border-radius);
}

.gs-tile {
  position: relative;
  overflow: hidden;
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: min-content 1fr min-content;
  grid-template-areas:
    'title title title title'
    'text text text icon'
    'level link link link';
  gap: 1rem;
  padding: 1rem;
  color: var(--color-white);
  border-top-right-radius: var(--tile-border-radius);
  border-bottom-left-radius: var(--tile-border-radius);
  text-decoration: none;
  text-align: left;
}

.gs-tile:has(~ .gs-tile:hover),
.gs-tile:hover ~ .gs-tile {
  transition: opacity 0.35s ease-in-out;
  opacity: 0.5;
}

.gs-icon {
  grid-area: icon;
  align-self: baseline;
  justify-self: end;
  display: flex;
  justify-content: flex-end;

  & > svg {
    width: clamp(1.5rem, 10cqw, 4rem);
    height: auto;
  }
}

.gs-title {
  font-size: var(--font-1);
  font-weight: var(--font-weight-bold);
  grid-area: title;
  margin: -1rem -1rem 0;
  padding: 1.25rem 1rem 1rem;
  line-height: 1;
}

.gs-intro {
  grid-area: text;
  font-size: var(--font-0);
  line-height: 1.5;
  text-transform: none;
}

.gs-text-icon-wrapper {
  display: grid;
  grid-template-columns: minmax(auto, 250px) auto;

  & svg {
    grid-row: 1;
  }
}

.gs-level-wrapper {
  grid-area: level;
}

.gs-link {
  @mixin link;

  font-size: var(--font--2);
  color: var(--color-white);
  grid-area: link;
  justify-self: end;
  align-self: center;
}
