@import '@styles/globals';
@import '@styles/mixins';

.intro {
  @mixin verticalPadding var(--space-5xl-6xl);
}

.image {
  grid-column: 2 / -2;

  @media (--viewport-tablet-min) {
    grid-column: 8 / -1;
  }

  @media (--viewport-desktop-min) {
    grid-column: 12 / -2;
  }
}

:global(.grid).sectionWrapper {
  padding-top: var(--space-m-l);
  row-gap: var(--space-l-3xl);
}

.playButton {
  white-space: nowrap;
  column-gap: var(--space-xs);

  & svg {
    width: 1.5rem;
    height: auto;
  }
}

.textPositioning {
  grid-column: 1 / -1;
  grid-row: 2;
  display: flex;
  flex-direction: column;
  row-gap: var(--space-s);

  @media (--viewport-tablet-min) {
    grid-column: 1 / 7;
    grid-row: 1;
  }

  @media (--viewport-desktop-min) {
    grid-column: 2 / 11;
  }
}

.headingWrapper {
  grid-column: 1 / -1;
  display: grid;
  row-gap: 5rem;

  @media (--viewport-tablet-min) {
    grid-auto-flow: column;

    & > .heading {
      grid-column: 1;
    }

    & > .button {
      justify-self: end;
      align-self: baseline;
      grid-column: 2;
    }
  }

  @media (--viewport-desktop-min) {
    grid-column: 2 / -2;
  }
}

.heading {
  display: grid;
  font-size: var(--font-6);
  color: var(--color-white);
}

.year {
  font-size: var(--font-1);
  font-weight: var(--font-weight-regular);
}

.title {
  font-size: var(--font-5);
  font-weight: var(--font-weight-black);
  line-height: 1.2;
  word-break: keep-all;
}

.detailsWrapper {
  @mixin body;
  @mixin gridColumnUtil;

  & {
    display: grid;
    color: var(--color-white);
    padding-left: var(--space-m-l);
    border-left: clamp(0.375rem, 1vw, 0.75rem) solid var(--color-white);
  }
}

.introText {
  @mixin body;
  @mixin gridColumnUtil;

  & {
    color: var(--color-white);

    & > * {
      --stack-override: var(--space-default);
    }
  }
}

.tabs {
  @mixin body;
  @mixin verticalPadding var(--space-3xl-5xl);

  & .h-heading {
    color: var(--color-black);
  }

  & svg circle {
    fill: var(--color-black);
  }
}
.tabsWrapper {
  grid-column: 1 / -1;
  align-self: baseline;

  @media (--viewport-desktop-min) {
    grid-column: 2 / 8;
  }
}
.tabsContent {
  grid-column: 1 / -1;

  @media (--viewport-desktop-min) {
    grid-column: 9 / -2;
  }
}

.gameLayout {
  grid-column: 1 / -1;
  justify-self: center;
}

.detailsTitle {
  font-size: var(--font-0);
  font-weight: var(--font-weight-bold);
}

.downIcon {
  justify-self: center;
}

.ghostWrapper {
  grid-column: 3 / span 2;
  padding-bottom: var(--space-3xl-4xl);

  @media (--viewport-tablet-min) {
    grid-column: 5 / span 4;
  }

  @media (--viewport-desktop-min) {
    grid-column: 8 / span 4;
  }
}

:global(.grid).backWrapper {
  @mixin paddingTop 5;

  & > a {
    grid-column: 1 / span 1;
  }
}

.backBtn {
  all: unset;
  display: flex;
  z-index: 1;
  padding: 0.5rem; /* Add padding to create a larger hover area */
  margin: -0.5rem; /* Compensate for the padding to maintain layout */

  & svg {
    width: 4rem;
    height: auto;
    overflow: visible;
    & circle {
      will-change: transform;
      transition: transform 0.2s ease-in-out 0.02s;
      transform-origin: center center;
    }

    &:hover path {
      animation: slideLeftRight 0.5s ease-in-out;
    }

    &:hover circle {
      transform: scale3d(1.2, 1.2, 1);
    }
  }
}

.sectionHeading span {
  color: var(--color-black);
}

@keyframes slideLeftRight {
  0% {
    transform: translateX(0);
  }

  30% {
    transform: translateX(-0.5rem);
  }

  60% {
    transform: translateX(0.3rem);
  }

  80% {
    transform: translateX(-0.05rem);
  }

  100% {
    transform: translateX(0);
  }
}
